# Для натурального n создать словарь индекс-значение, состоящий из элементов последовательности 3n + 1.

# Пример:

# Для n = 6: {1: 4, 2: 7, 3: 10, 4: 13, 5: 16, 6: 19}

# n = int(input('Введите натуральное число '))
# dict = {}
# for i in range (1,n+1):
#     dict[i] = 3*i + 1
# print(dict)

# Задайте список(произвольный). Напишите программу, которая определит, 
# присутствует ли в заданном списке строк некое число.

# list = [4, 7, 'red', 13, 16, 19, 'чис3ло', '3']
# new_list = dict.values()
# print(new_list)
# n = input('Введите искомое число ')
# count = 0
# for i in list:
#     i = str(i)
#     if n in i:
#         print("Да есть")
#         count = 1
#         break
# if count == 0:
#     print("Отсутствует")

# Напишите программу, которая определит позицию второго вхождения строки в списке либо сообщит, что её нет(по индексу).

# Пример:

# список: ["qwe", "asd", "zxc", "qwe", "ertqwe"], ищем: "qwe", ответ: 3
# список: ["йцу", "фыв", "ячс", "цук", "йцукен", "йцу"], ищем: "йцу", ответ: 5
# список: ["йцу", "фыв", "ячс", "цук", "йцукен"], ищем: "йцу", ответ: -1
# список: ["123", "234", 123, "567"], ищем: "123", ответ: -1
# список: [], ищем: "123", ответ: -1

# def second_in(list,find):
#     count = 0
#     for i in range(len(list)):
#         if list[i] == find:
#             count+=1
#             if count == 2:
#                 return i
#     return -1

# list = ["qwe", "asd", "zxc", "qwe", "ertqwe"]
# find = "qwe"

# print(second_in(list,find))

# Программа "Именной фильтр". Напишите функцию, которая принимает на вход список с именами людей 
# и возвращает новый список с именами, которые начинаются на гласную букву. В новом списке имя должно начинаться 
# с прописной (большой) буквы, даже если изначально было написано со строчной(маленькой).
# Пример:

# Введите имена через пробел: Никонор иван Харитон Ульяна яков
# Функция вернула ['Иван', 'Ульяна', 'Яков']
# def name_sort(list):
#     vowels_set = {"А","У","О","Е","И","Я","Ю","Ё","Э","Ы"}
#     list_new = []
#     for i in list:
#         time_str = i.capitalize()
#         if time_str[0] in vowels_set:
#             list_new.append(time_str)
#     return list_new

# list = ["Никонор", "иван", "Харитон", "Ульяна", "яков"]

# print(name_sort(list))

# Программа "Среднее арифметическое". Введите целое число от 3 до 20 (число n). 
# Запросите n вещественных чисел и сохраните их в список. 
# Вызовите функцию, которая принимает на вход список (один аргумент) и возвращает 
# среднее арифметическое всех элементов списка. Результат работы функции сохраните в переменную и выведите на экран.
# Пример:

# Введите целое число от 3 до 20 3
# Введите число номер 1: 4
# Введите число номер 2: 5
# Введите число номер 3: 6
# Введено чисел: 3

# Это числа: [4.0, 5.0, 6.0]

# Функция вернула среднее арифметическое: 5.0
def math_average(list):
    sum = 0
    for i in list:
        sum+=i
    return sum / len(list)

n = int(input('Введите целое число от 3 до 20 '))
list = []

for i in range(n):
    list.append(float(input(f'Введите число номер {i+1}: ')))
print(list)
average = math_average(list)

print (average)